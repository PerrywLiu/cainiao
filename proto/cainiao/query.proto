syntax = "proto3";
package cosmonaut.cainiao.cainiao;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cainiao/params.proto";
import "cainiao/orders.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/cosmonaut/cainiao/x/cainiao/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/cosmonaut/cainiao/cainiao/params";
  }
  // Queries a Orders by id.
	rpc Orders(QueryGetOrdersRequest) returns (QueryGetOrdersResponse) {
		option (google.api.http).get = "/cosmonaut/cainiao/cainiao/orders/{id}";
	}

	// Queries a list of Orders items.
	rpc OrdersAll(QueryAllOrdersRequest) returns (QueryAllOrdersResponse) {
		option (google.api.http).get = "/cosmonaut/cainiao/cainiao/orders";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetOrdersRequest {
	uint64 id = 1;
}

message QueryGetOrdersResponse {
	Orders Orders = 1 [(gogoproto.nullable) = false];
}

message QueryAllOrdersRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllOrdersResponse {
	repeated Orders Orders = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
